# $Id: Makefile.kmk $
## @file
# Sub-Makefile for the Windows NT Additions Tools.
#

#
# Copyright (C) 2012-2020 Oracle Corporation
#
# This file is part of VirtualPox Open Source Edition (OSE), as
# available from http://www.virtualpox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualPox OSE distribution. VirtualPox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../../..
include $(KBUILD_PATH)/subheader.kmk

#
# Certificate utility.
#
PROGRAMS += VPoxCertUtil

VPoxCertUtil_TEMPLATE = VPoxGuestR3Exe
VPoxCertUtil_SOURCES = \
	VPoxCertUtil.cpp
VPoxCertUtil_LIBS = \
	crypt32.lib
$(call VPOX_SET_VER_INFO_EXE,VPoxCertUtil,VirtualPox Certificate Utility,$(VPOX_WINDOWS_ADDITIONS_ICON_FILE))


#
# Install all the certificates we use here.
#
INSTALLS += AdditionsInstCertFiles
AdditionsInstCertFiles_TEMPLATE = VPoxGuestR3Exe
AdditionsInstCertFiles_SOURCES  =
AdditionsInstCertFiles_CLEAN    =
ifdef VPOX_SIGNING_MODE
 define def_VPoxAdditionsInstCertFiles
  AdditionsInstCertFiles_SOURCES += $$(AdditionsInstCertFiles_0_OUTDIR)/$(1)=>$1
  AdditionsInstCertFiles_CLEAN   += $$(AdditionsInstCertFiles_0_OUTDIR)/$(1)
  $$$$(AdditionsInstCertFiles_0_OUTDIR)/$(1): $$(2) | $$$$(dir $$$$@) $(VPOX_RTSIGNTOOL)
	$(QUIET)$(RM) -f -- "$$@"
	$(VPOX_RTSIGNTOOL) extract-exe-signer-cert --signature-index $3 --exe "$$<" --output "$$@" --der
 endef

 if !defined(VPOX_CERTIFICATE_SHA2_SUBJECT_NAME) && !$(intersects win all 1,$(VPOX_WITH_CORP_CODE_SIGNING))
  $(evalcall2 def_VPoxAdditionsInstCertFiles,vpox.cer,$(VPOX_PATH_ADDITIONS)/VPoxGuest.sys,0)
 else
  $(evalcall2 def_VPoxAdditionsInstCertFiles,vpox-sha1.cer,$(VPOX_PATH_ADDITIONS)/VPoxGuest.sys,0)
  $(evalcall2 def_VPoxAdditionsInstCertFiles,vpox-sha256.cer,$(VPOX_PATH_ADDITIONS)/VPoxGuest.sys,1)
  if $(intersects win_planb,$(VPOX_WITH_CORP_CODE_SIGNING))
   $(evalcall2 def_VPoxAdditionsInstCertFiles,vpox-sha256-r3.cer,$(VPOX_PATH_ADDITIONS)/VPoxCertUtil.exe,1)
  endif
 endif
 ifdef VPOX_WITH_VPOX_LEGACY_TS_CA
AdditionsInstCertFiles_SOURCES += $(VPOX_LEGACY_TS_CA_FILE)=>vpox-legacy-timestamp-ca.cer
 endif
endif

#
# Install the registry file for bypassing the Windows 11 installer checks.
#
INSTALLS += AdditionsInstW11Bypass
AdditionsInstW11Bypass_INST = $(INST_ADDITIONS)
AdditionsInstW11Bypass_MODE = a+r,u+w
AdditionsInstW11Bypass_SOURCES = windows11-bypass.reg

include $(FILE_KBUILD_SUB_FOOTER)

