#!/bin/sh
# $Id: postinst $
## @file
# VirtualPox postinst
#

#
# Copyright (C) 2006-2020 Oracle Corporation
#
# This file is part of VirtualPox Open Source Edition (OSE), as
# available from http://www.virtualpox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualPox OSE distribution. VirtualPox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

# we can be called with the following arguments (6.5 of Debian policy):
#  configure:         (our version): installing/configuring new version
#  abort-upgrade:     (old version): upgrading to a new version failed
#  abort-remove:      (our version): removing this package failed
#  abort-deconfigure: (our version): error during resolving conflicts

## @todo Do we really gain anything from not just executing everything
##       unconditionally?

LOG="/var/log/vpox-install.log"

# defaults
[ -r /etc/default/virtualpox ] && . /etc/default/virtualpox

if [ "$1" = "configure" ]; then

  # for debconf
  . /usr/share/debconf/confmodule
  db_version 2.0

  # remove old cruft
  if [ -f /etc/init.d/vpoxdrv.sh ]; then
    echo "Found old version of /etc/init.d/vpoxdrv.sh, removing."
    rm /etc/init.d/vpoxdrv.sh
    update-rc.d vpoxdrv.sh remove >/dev/null
  fi
  if [ -f /etc/vpox/vpox.cfg ]; then
    echo "Found old version of /etc/vpox/vpox.cfg, removing."
    rm /etc/vpox/vpox.cfg
  fi

  # create users groups (disable with INSTALL_NO_GROUP=1 in /etc/default/virtualpox)
  if [ "$INSTALL_NO_GROUP" != "1" ]; then
    db_input low virtualpox/group-vpoxusers || true
    db_go || true
    addgroup --system vpoxusers || true
  fi

  # The starters need to be Suid root. They drop the privileges before starting
  # the real frontend.
  if test -e /usr/lib/virtualpox/VirtualPoxVM; then
    if ! dpkg-statoverride --list /usr/lib/virtualpox/VirtualPoxVM > /dev/null 2>&1; then
      chmod 4511 /usr/lib/virtualpox/VirtualPoxVM
    fi
  else
    if ! dpkg-statoverride --list /usr/lib/virtualpox/VirtualPox > /dev/null 2>&1; then
      chmod 4511 /usr/lib/virtualpox/VirtualPox
    fi
  fi
  if ! dpkg-statoverride --list /usr/lib/virtualpox/VPoxHeadless > /dev/null 2>&1; then
    chmod 4511 /usr/lib/virtualpox/VPoxHeadless
  fi
  if ! dpkg-statoverride --list /usr/lib/virtualpox/VPoxSDL > /dev/null 2>&1; then
    chmod 4511 /usr/lib/virtualpox/VPoxSDL
  fi
  if ! dpkg-statoverride --list /usr/lib/virtualpox/VPoxNetDHCP > /dev/null 2>&1; then
    chmod 4511 /usr/lib/virtualpox/VPoxNetDHCP
  fi
  if ! dpkg-statoverride --list /usr/lib/virtualpox/VPoxNetNAT > /dev/null 2>&1; then
    chmod 4511 /usr/lib/virtualpox/VPoxNetNAT
  fi
  if ! dpkg-statoverride --list /usr/lib/virtualpox/VPoxNetAdpCtl > /dev/null 2>&1; then
    chmod 4511 /usr/lib/virtualpox/VPoxNetAdpCtl
  fi
  if [ -x /usr/lib/virtualpox/VPoxVolInfo ]; then
    if ! dpkg-statoverride --list /usr/lib/virtualpox/VPoxVolInfo > /dev/null 2>&1; then
      chmod 4511 /usr/lib/virtualpox/VPoxVolInfo
    fi
  fi
fi # $1 = "configure"

#DEBHELPER#

if test "${INSTALL_NO_VPOXDRV}" = 1; then
  POSTINST_START=--nostart
else
  POSTINST_START=
fi

# Install and start the new service scripts.
/usr/lib/virtualpox/prerm-common.sh || true
/usr/lib/virtualpox/postinst-common.sh ${POSTINST_START} > /dev/null || true

exit 0
