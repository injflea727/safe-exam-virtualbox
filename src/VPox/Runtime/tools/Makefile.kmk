# $Id: Makefile.kmk $
## @file
# Sub-Makefile for the IPRT tools.
#

#
# Copyright (C) 2006-2020 Oracle Corporation
#
# This file is part of VirtualPox Open Source Edition (OSE), as
# available from http://www.virtualpox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualPox OSE distribution. VirtualPox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#
# The contents of this file may alternatively be used under the terms
# of the Common Development and Distribution License Version 1.0
# (CDDL) only, as it comes in the "COPYING.CDDL" file of the
# VirtualPox OSE distribution, in which case the provisions of the
# CDDL are applicable instead of those of the GPL.
#
# You may elect to license modified versions of this file under the
# terms and conditions of either the GPL or the CDDL or both.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk


if !defined(VPOX_ONLY_EXTPACKS) && !defined(VPOX_ONLY_DOCS)
 # RTIsoMaker - ISO image maker - build version.
 ifeq ($(KBUILD_TARGET), win) # Needed for repacking guest additions.
  PROGRAMS += bldRTIsoMaker
  bldRTIsoMaker_INSTTYPE = stage
 else
  BLDPROGS += bldRTIsoMaker
 endif
 bldRTIsoMaker_TEMPLATE = VPoxAdvBldProg
 bldRTIsoMaker_SOURCES = \
 	RTIsoMaker.cpp \
        ../common/misc/buildconfig.cpp
 bldRTIsoMaker_DEFS = \
 	IPRT_BLDCFG_SCM_REV=$(if $(VPOX_SVN_REV_FALLBACK),$(VPOX_SVN_REV_FALLBACK),$(VPOX_SVN_REV)) \
 	IPRT_BLDCFG_VERSION_MAJOR=$(VPOX_VERSION_MAJOR) \
 	IPRT_BLDCFG_VERSION_MINOR=$(VPOX_VERSION_MINOR) \
 	IPRT_BLDCFG_VERSION_BUILD=$(VPOX_VERSION_BUILD)
 ifdef VPOX_WITH_AUTOMATIC_DEFS_QUOTING
  bldRTIsoMaker_DEFS += \
 	IPRT_BLDCFG_VERSION_STRING="$(VPOX_VERSION_STRING)" \
 	IPRT_BLDCFG_TARGET="$(KBUILD_TARGET)" \
 	IPRT_BLDCFG_TARGET_ARCH="$(KBUILD_TARGET_ARCH)" \
 	IPRT_BLDCFG_TYPE="$(KBUILD_TYPE)"
 else
  bldRTIsoMaker_DEFS += \
 	IPRT_BLDCFG_VERSION_STRING=\"$(VPOX_VERSION_STRING)\" \
 	IPRT_BLDCFG_TARGET=\"$(KBUILD_TARGET)\" \
 	IPRT_BLDCFG_TARGET_ARCH=\"$(KBUILD_TARGET_ARCH)\" \
 	IPRT_BLDCFG_TYPE=\"$(KBUILD_TYPE)\"
 endif
 bldRTIsoMaker_INCS = ../include
endif


if !defined(VPOX_ONLY_DOCS)

 # RTManifest is a tool for creating and verifying manifest files - build version.
 BLDPROGS += bldRTManifest
 bldRTManifest_TEMPLATE = VPoxAdvBldProg
 bldRTManifest_SOURCES  = RTManifest.cpp


 if !defined(VPOX_ONLY_EXTPACKS) || "$(KBUILD_TARGET)" == "win" || "$(KBUILD_TARGET)" == "darwin"
  # RTSignTool - Signing utility - build version.  Signed on windows so we can get the certificate from it.
  BLDPROGS += bldRTSignTool
  bldRTSignTool_TEMPLATE  := VPoxAdvBldProg
  bldRTSignTool_INCS      := ../include
  bldRTSignTool_SOURCES   := RTSignTool.cpp
  bldRTSignTool_DEFS      := IPRT_IN_BUILD_TOOL
  bldRTSignTool_LIBS.win  := Crypt32.lib NCrypt.lib
  ifndef VPOX_WITH_BLD_RTSIGNTOOL_SIGNING
   bldRTSignTool_DEFS     += IPRT_SIGNTOOL_NO_SIGNING
  else # RuntimeBldProg is missing a lot and is built w/o IPRT_WITH_OPENSSL. So, include missing and rebuilt openssl deps.
   bldRTSignTool_SDKS     += VPOX_OPENSSL_BLDPROG
   bldRTSignTool_DEFS     += IPRT_WITH_OPENSSL
   bldRTSignTool_SOURCES  += \
       ../common/string/RTStrICmpAscii.cpp \
	../common/checksum/alt-sha3.cpp \
       ../common/crypto/store-inmem.cpp \
       ../common/crypto/store-cert-add-basic.cpp \
       ../common/crypto/rsa-core.cpp \
       ../common/crypto/rsa-asn1-decoder.cpp \
       ../common/crypto/rsa-init.cpp \
       ../common/crypto/rsa-sanity.cpp \
       ../common/crypto/RTCrStoreCertAddFromJavaKeyStore.cpp \
       ../common/crypto/pkix-signature-core.cpp \
       ../common/crypto/pkix-signature-builtin.cpp \
       ../common/crypto/pkix-signature-rsa.cpp \
       \
       ../common/crypto/store.cpp \
       ../common/crypto/digest-builtin.cpp \
	../common/crypto/iprt-openssl.cpp\
       ../common/crypto/key.cpp \
       ../common/crypto/key-file.cpp \
	../common/crypto/key-openssl.cpp \
	../common/crypto/pkcs7-core.cpp \
	../common/crypto/pkcs7-sign.cpp \
	../common/crypto/RTCrRandBytes-openssl.cpp
   if1of ($(KBUILD_HOST), darwin win)
    bldRTSignTool_SOURCES += ../r3/$(KBUILD_HOST)/RTCrStoreCreateSnapshotById-$(KBUILD_HOST).cpp
   else
    bldRTSignTool_SOURCES += ../genericc/RTCrStoreCreateSnapshotById-generic.cpp
   endif
  endif
 endif

 if !defined(VPOX_ONLY_EXTPACKS)
  # RTLdrCheckImports - import checker.
  PROGRAMS += bldRTLdrCheckImports
  bldRTLdrCheckImports_TEMPLATE = VPoxAdvBldProg
  bldRTLdrCheckImports_DEFS = IPRT_IN_BUILD_TOOL
  bldRTLdrCheckImports_SOURCES = RTLdrCheckImports.cpp
 endif
endif

if !defined(VPOX_ONLY_BUILD)

 # RTCat is a tool for displaying files.
 PROGRAMS += RTCat
 RTCat_TEMPLATE = VPoxR3Tool
 RTCat_SOURCES = RTCat.cpp
 RTCat_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTChMod - our chmod clone.
 PROGRAMS += RTChMod
 RTChMod_TEMPLATE = VPoxR3Tool
 RTChMod_SOURCES = RTChMod.cpp

 # RTCp - our cp clone.
 PROGRAMS += RTCp
 RTCp_TEMPLATE = VPoxR3Tool
 RTCp_SOURCES = RTCp.cpp
 RTCp_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTIsoMaker - ISO image maker - build version.
 PROGRAMS += RTIsoMaker
 RTIsoMaker_TEMPLATE = VPoxR3Tool
 RTIsoMaker_SOURCES = RTIsoMaker.cpp
 RTIsoMaker_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTLs is a tool for listing file information.
 PROGRAMS += RTLs
 RTLs_TEMPLATE = VPoxR3Tool
 RTLs_SOURCES = RTLs.cpp
 RTLs_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTRm is a tool for removing files and directories.
 PROGRAMS += RTRm
 RTRm_TEMPLATE = VPoxR3Tool
 RTRm_SOURCES = RTRm.cpp
 RTRm_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTManifest is a tool for creating and verifying manifest files.
 PROGRAMS += RTManifest
 RTManifest_TEMPLATE = VPoxR3Tool
 RTManifest_SOURCES = RTManifest.cpp
 RTManifest_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTLdrFlt is similar to c++filt, except that it's for VMMR0.r0 stacks.
 PROGRAMS += RTLdrFlt
 RTLdrFlt_TEMPLATE = VPoxR3Tool
 RTLdrFlt_SOURCES = RTLdrFlt.cpp

 # RTFTPServer implements a simple FTP server.
 PROGRAMS += RTFTPServer
 RTFTPServer_TEMPLATE = VPoxR3Tool
 RTFTPServer_SOURCES = RTFTPServer.cpp

 # RTGzip - our gzip clone (for testing the gzip/gunzip streaming code)
 PROGRAMS += RTGzip
 RTGzip_TEMPLATE = VPoxR3Tool
 RTGzip_SOURCES = RTGzip.cpp
 RTGzip_SOURCES += ../VPox/LoadVPoxDDU.cpp

 ifdef VPOX_WITH_LIBCURL
  # RTHttp - our http/https fetcher (for testing the http client API).
  PROGRAMS += RTHttp
  RTHttp_TEMPLATE = VPoxR3Tool
  RTHttp_SOURCES = RTHttp.cpp
 endif

 # RTLdrCheckImports - import checker.
 PROGRAMS += RTLdrCheckImports
 RTLdrCheckImports_TEMPLATE = VPoxR3Tool
 RTLdrCheckImports_SOURCES = RTLdrCheckImports.cpp
 RTLdrCheckImports_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTMkDir - our mkdir clone.
 PROGRAMS += RTMkDir
 RTMkDir_TEMPLATE = VPoxR3Tool
 RTMkDir_SOURCES = RTMkDir.cpp

 # RTRmDir - our mkdir clone.
 PROGRAMS += RTRmDir
 RTRmDir_TEMPLATE = VPoxR3Tool
 RTRmDir_SOURCES = RTRmDir.cpp

 # RTShutdown - similar (but not identical) to a typical unix shutdown command.
 PROGRAMS += RTShutdown
 RTShutdown_TEMPLATE = VPoxR3Tool
 RTShutdown_SOURCES = RTShutdown.cpp

 # RTTar - our tar clone (for testing the tar/gzip/gunzip streaming code)
 PROGRAMS += RTTar
 RTTar_TEMPLATE = VPoxR3Tool
 RTTar_SOURCES = RTTar.cpp
 RTTar_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTUnzip - our unzip clone (for testing the unzip streaming code)
 PROGRAMS += RTUnzip
 RTUnzip_TEMPLATE = VPoxR3Tool
 RTUnzip_SOURCES = RTUnzip.cpp
 RTUnzip_SOURCES += ../VPox/LoadVPoxDDU.cpp

 # RTNtDbgHelp - our tar clone (for testing the tar/gzip/gunzip streaming code)
 PROGRAMS.win += RTNtDbgHelp
 RTNtDbgHelp_TEMPLATE = VPoxR3Tool
 RTNtDbgHelp_SOURCES = RTNtDbgHelp.cpp

 # RTDbgSymCache - Symbol cache manager.
 PROGRAMS += RTDbgSymCache
 RTDbgSymCache_TEMPLATE = VPoxR3Tool
 RTDbgSymCache_SOURCES = RTDbgSymCache.cpp

 # RTSignTool - Signing utility.
 PROGRAMS += RTSignTool
 RTSignTool_TEMPLATE := VPoxR3Tool
 RTSignTool_INCS     := ../include
 RTSignTool_SOURCES  := RTSignTool.cpp
 RTSignTool_LIBS     = $(PATH_STAGE_LIB)/SUPR3$(VPOX_SUFF_LIB)
 RTSignTool_LIBS.win  = Crypt32.lib NCrypt.lib

 # RTTraceLogTool - Trace log collection and dissection tool.
 PROGRAMS += RTTraceLogTool
 RTTraceLogTool_TEMPLATE = VPoxR3Tool
 RTTraceLogTool_SOURCES = RTTraceLogTool.cpp

 # RTFuzzMaster - Fuzzing master tool.
 PROGRAMS += RTFuzzMaster
 RTFuzzMaster_TEMPLATE = VPoxR3Tool
 RTFuzzMaster_SOURCES = RTFuzzMaster.cpp

 # RTFuzzClient - Fuzzing client tool.
 PROGRAMS += RTFuzzClient
 RTFuzzClient_TEMPLATE = VPoxR3Tool
 RTFuzzClient_SOURCES = RTFuzzClient.cpp

 # RTEfiFatExtract - Extracting single files from a fat EFI binary.
 PROGRAMS += RTEfiFatExtract
 RTEfiFatExtract_TEMPLATE = VPoxR3Tool
 RTEfiFatExtract_SOURCES = RTEfiFatExtract.cpp

 if1of ($(KBUILD_TARGET), darwin linux solaris win)
  # RTKrnlModInfo - our lsmod/kextstat clone (for testing the RTKrnlMod code).
  PROGRAMS += RTKrnlModInfo
  RTKrnlModInfo_TEMPLATE = VPoxR3Tool
  RTKrnlModInfo_SOURCES = RTKrnlModInfo.cpp
 endif

endif # !VPOX_ONLY_BUILD

include $(FILE_KBUILD_SUB_FOOTER)

