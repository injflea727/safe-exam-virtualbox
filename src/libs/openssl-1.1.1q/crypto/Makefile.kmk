# $Id: Makefile.kmk $
## @file
# Sub-Makefile for OpenSSL crypto.
#

#
# Copyright (C) 2006-2019 Oracle Corporation
#
# Oracle Corporation confidential
# All rights reserved
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk

#
# Include sub-makefiles.
#
# Note! For joining the sub libraries into a crypto lib, we do some trickery to
#       collect the sub-library names here.
#
VPOX_LIBRARIES_BEFORE_CRYPTO_SUBDIRS := $(LIBRARIES)
if defined(VPOX_ONLY_VALIDATIONKIT)
 include $(VPOX_PATH_CRYPTO)/sha/Makefile.kmk
else
 include $(sort $(wildcard $(VPOX_PATH_CRYPTO)/*/Makefile.kmk))
endif
VPOX_CRYPTO_SUBLIBS     := $(filter-out $(VPOX_LIBRARIES_BEFORE_CRYPTO_SUBDIRS), $(LIBRARIES))
VPOX_CRYPTO_SUBLIBS_X86 := $(filter     %-x86, $(VPOX_CRYPTO_SUBLIBS))
VPOX_CRYPTO_SUBLIBS     := $(filter-out %-x86, $(VPOX_CRYPTO_SUBLIBS))
if defined(VPOX_ONLY_EXTPACKS_USE_IMPLIBS)
 $(eval LIBRARIES = $(VPOX_LIBRARIES_BEFORE_CRYPTO_SUBDIRS) crypto_sha)
else if "$(SDK_VPOX_OPENSSL_INCS)" != "$(SDK_VPOX_OPENSSL_VPOX_DEFAULT_INCS)"
 $(eval LIBRARIES = $(VPOX_LIBRARIES_BEFORE_CRYPTO_SUBDIRS))
endif
VPOX_LIBRARIES_BEFORE_CRYPTO_SUBDIRS :=


#
# The VPoxRT libcrypto.
#
LIBRARIES += VPox-libcrypto
VPox-libcrypto_TEMPLATE = LIBCRYPTO
VPox-libcrypto_INCS     = $(VPox-libcrypto_0_OUTDIR)
VPox-libcrypto_SOURCES  = \
	cpt_err.c \
	cryptlib.c \
	ctype.c \
	cversion.c \
	ebcdic.c \
	ex_data.c \
	getenv.c \
	init.c \
	mem.c \
	mem_dbg.c \
	mem_sec.c \
	o_dir.c \
	o_fips.c \
	o_fopen.c \
	o_init.c \
	o_str.c \
	o_time.c \
	uid.c \
	threads_iprt.c

ifdef VPOX_WITH_CRYPTO_ASM
 VPox-libcrypto_DEFS.x86 += OPENSSL_CPUID_OBJ=x86cpuid.o
 VPox-libcrypto_SOURCES.x86 += $(VPOX_PATH_CRYPTO_GENASM)/x86cpuid.S
 VPox-libcrypto_DEFS.amd64 += OPENSSL_CPUID_OBJ=x86_64cpuid.o
 VPox-libcrypto_SOURCES.amd64 += $(VPOX_PATH_CRYPTO_GENASM)/x86_64cpuid.S
else
 VPox-libcrypto_SOURCES += mem_clr.c
endif

ifdef VPOX_WITH_OPENSSL_FIPS
 VPox-libcrypto_SOURCES += o_fips.c fips_ers.c
endif

if defined(VPOX_ONLY_EXTPACKS_USE_IMPLIBS)
 VPox-libcrypto_SOURCES += $(crypto_sha_1_TARGET)
else if "$(SDK_VPOX_OPENSSL_INCS)" == "$(SDK_VPOX_OPENSSL_VPOX_DEFAULT_INCS)"
 VPox-libcrypto_SOURCES += $(foreach sublib,$(VPOX_CRYPTO_SUBLIBS), $($(sublib)_1_TARGET))
endif

VPox-libcrypto_CLEAN = $(VPox-libcrypto_0_OUTDIR)/buildinf.h
VPox-libcrypto_INTERMEDIATES = $(VPox-libcrypto_0_OUTDIR)/buildinf.h


ifdef VPOX_WITH_32_ON_64_MAIN_API # 32-bit edition.
 LIBRARIES += VPox-libcrypto-x86
 VPox-libcrypto-x86_TEMPLATE = VPoxLibCrypto-x86
 VPox-libcrypto-x86_EXTENDS = VPox-libcrypto
 VPox-libcrypto-x86_SOURCES = $(filter %.c %.cpp,$(VPox-libcrypto_SOURCES)) \
	$(foreach sublib,$(VPOX_CRYPTO_SUBLIBS_X86), $($(sublib)_1_TARGET))
endif


ifdef VPOX_NEED_EXTPACK_OPENSSL
#
# The extension pack libcrypto.
#
LIBRARIES += VPoxExtPack-libcrypto
VPoxExtPack-libcrypto          = For the Oracle Extension Pack
VPoxExtPack-libcrypto_EXTENDS  = VPox-libcrypto
VPoxExtPack-libcrypto_DEFS     = $(VPox-libcrypto_DEFS) VPOX_IN_EXTPACK
VPoxExtPack-libcrypto_SOURCES  = \
	$(filter %.c %.cpp,$(VPox-libcrypto_SOURCES)) \
	$(foreach sublib,$(VPOX_CRYPTO_SUBLIBS), $(VPoxExtPack-$(sublib)_1_TARGET))
define def_VPoxExtPack_libcrypto_inherit
 LIBRARIES += VPoxExtPack-$(sublib)
 VPoxExtPack-$(sublib) = Oracle Extension Pack version of $(sublib)
 VPoxExtPack-$(sublib)_EXTENDS = $(sublib)
 VPoxExtPack-$(sublib)_EXTENDS_BY = appending
 VPoxExtPack-$(sublib)_DEFS = VPOX_IN_EXTPACK
 VPoxExtPack-$(sublib)_DEFPATH = $($(sublib)_DEFPATH)
 ## @todo kBuild: DEFPATH isn't inherited! FIXME!
endef
$(foreach sublib,$(VPOX_CRYPTO_SUBLIBS), $(eval $(def_VPoxExtPack_libcrypto_inherit)))

endif # VPOX_NEED_EXTPACK_OPENSSL


ifdef VPOX_WITH_BLD_RTSIGNTOOL_SIGNING
#
# The build program libcrypto version.
#
LIBRARIES += VPoxBldProg-libcrypto
VPoxBldProg-libcrypto          = For bldRTSignTool
VPoxBldProg-libcrypto_EXTENDS  = VPox-libcrypto
VPoxBldProg-libcrypto_TEMPLATE = VPoxLibCryptoBldProg
VPoxBldProg-libcrypto_DEFS     = $(VPox-libcrypto_DEFS)
VPoxBldProg-libcrypto_SOURCES  = \
	$(filter %.c %.cpp,$(VPox-libcrypto_SOURCES)) \
	$(foreach sublib,$(VPOX_CRYPTO_SUBLIBS), $(VPoxBldProg-$(sublib)_1_TARGET))
define def_VPoxBldProg_libcrypto_inherit
 LIBRARIES += VPoxBldProg-$(sublib)
 VPoxBldProg-$(sublib) = bldRTSignTool version of $(sublib)
 VPoxBldProg-$(sublib)_EXTENDS    = $(sublib)
 VPoxBldProg-$(sublib)_EXTENDS_BY = appending
 VPoxBldProg-$(sublib)_TEMPLATE   = VPoxSubLibCryptoBldProg
 VPoxBldProg-$(sublib)_DEFPATH    = $($(sublib)_DEFPATH)
 ## @todo kBuild: DEFPATH isn't inherited! FIXME!
endef
$(foreach sublib,$(VPOX_CRYPTO_SUBLIBS), $(eval $(def_VPoxBldProg_libcrypto_inherit)))

endif # VPOX_WITH_BLD_RTSIGNTOOL_SIGNING


#
# ...
#
recreate-openssl-asm: $(VPOX_PATH_CRYPTO)/perlasm/x86asm.pl \
	$(VPOX_PATH_CRYPTO)/x86cpuid.pl \
	$(VPOX_PATH_CRYPTO)/x86_64cpuid.pl \
	recreate-aes-asm \
	recreate-bn-asm \
	recreate-chacha-asm \
	recreate-ec-asm \
	recreate-md5-asm \
	recreate-modes-asm \
	recreate-rc4-asm \
	recreate-sha-asm
	perl $(VPOX_PATH_CRYPTO)/x86cpuid.pl elf -fPIC $(VPOX_PATH_CRYPTO)/genasm-elf/x86cpuid.S
	perl $(VPOX_PATH_CRYPTO)/x86_64cpuid.pl elf $(VPOX_PATH_CRYPTO)/genasm-elf/x86_64cpuid.S
	perl $(VPOX_PATH_CRYPTO)/x86cpuid.pl macosx $(VPOX_PATH_CRYPTO)/genasm-macosx/x86cpuid.S
	perl $(VPOX_PATH_CRYPTO)/x86_64cpuid.pl macosx $(VPOX_PATH_CRYPTO)/genasm-macosx/x86_64cpuid.S
	perl $(VPOX_PATH_CRYPTO)/x86cpuid.pl win32n $(VPOX_PATH_CRYPTO)/genasm-nasm/x86cpuid.S
	perl $(VPOX_PATH_CRYPTO)/x86_64cpuid.pl nasm $(VPOX_PATH_CRYPTO)/genasm-nasm/x86_64cpuid.S


include $(FILE_KBUILD_SUB_FOOTER)


#
# Generate
#
$(VPox-libcrypto_0_OUTDIR)/buildinf.h: $(VPOX_PATH_CRYPTO)/Makefile.kmk | $$(dir $$@)
	$(call MSG_GENERATE,,$@)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(APPEND) $@ '/* auto-generated by crypto/Makefile.kmk for crypto/cversion.c */'
	$(QUIET)$(APPEND) $@ '#ifndef MK1MF_BUILD'
	$(QUIET)$(APPEND) $@ '# define PLATFORM "$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH)"'
	$(QUIET)$(APPEND) $@ '# define DATE "$(date-utc )"'
	$(QUIET)$(APPEND) $@ 'static const char compiler_flags[] ='
	$(QUIET)$(APPEND) $@ '  "$(VPox-libcrypto_CFLAGS)";'
	$(QUIET)$(APPEND) $@ '#endif'

