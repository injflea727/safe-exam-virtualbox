# $Id: Makefile.kmk $
## @file
# Sub-Makefile for the VPox C Binding.
#

#
# Copyright (C) 2009-2020 Oracle Corporation
#
# This file is part of VirtualPox Open Source Edition (OSE), as
# available from http://www.virtualpox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualPox OSE distribution. VirtualPox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk


#
# The samples
#
INSTALLS += CAPISamples
CAPISamples_MODE = a+r,u+rw
CAPISamples_INST = \
	$(INST_SDK)bindings/c/samples/
CAPISamples_SOURCES = \
	tstCAPIGlue.c \
	makefile.tstCAPIGlue=>Makefile

#
# The ???.
#
INSTALLS += CAPIGlue
CAPIGlue_MODE = a+r,u+rw
CAPIGlue_INST = \
	$(INST_SDK)bindings/c/glue/
CAPIGlue_SOURCES = \
	VPoxCAPIGlue.c \
	$(CAPIHeaders_0_OUTDIR)/VPoxCAPIGlue.h
CAPIGlue_CLEAN = \
	$(CAPIHeaders_0_OUTDIR)/VPoxCAPIGlue.h

$$(CAPIHeaders_0_OUTDIR)/VPoxCAPIGlue.h: \
		$(PATH_SUB_CURRENT)/VPoxCAPIGlue.h.in \
		$(MAKEFILE_CURRENT) \
		| $$(dir $$@)
	$(call MSG_GENERATE,,$@)
	$(QUIET)$(SED) \
		-e 's/@VPOX_API_VERSION@/$(VPOX_API_VERSION)/' \
		<  $< >  $@

#
# The ???.
#
INSTALLS += CAPIHeaders
CAPIHeaders_MODE = a+r,u+rw
CAPIHeaders_INST = $(INST_SDK)bindings/c/include/
CAPIHeaders_SOURCES = \
	$(CAPIHeaders_0_OUTDIR)/VPoxCAPI.h=>VPoxCAPI_v$(VPOX_API_VERSION).h
CAPIHeaders_CLEAN = \
	$(CAPIHeaders_0_OUTDIR)/VPoxCAPI.h

$$(CAPIHeaders_0_OUTDIR)/VPoxCAPI.h: \
		$(PATH_SUB_CURRENT)/capiidl.xsl \
		$(PATH_SUB_CURRENT)/../idl/typemap-shared.inc.xsl \
		$(VPOX_XIDL_FILE) \
		| $$(dir $$@)
	$(call MSG_TOOL,xsltproc,CAPIHeaders,$<,$@)
	$(QUIET)$(VPOX_XSLTPROC) -o $@ $^

if !defined(VPOX_ONLY_SDK)

 #
 # The C API binding utility DLL
 #
 DLLS += VPoxCAPI
 VPoxCAPI_TEMPLATE = VPOXMAINCLIENTDLL
 ifdef VPOX_WITH_XPCOM
  # Keep old name on XPCOM so that legacy code is happy.
  VPoxCAPI_INST = $(INST_BIN)VPoxXPCOMC$(VPOX_SUFF_DLL)
 endif
 VPoxCAPI_DEFS = IN_VPOXCAPI
 VPoxCAPI_SOURCES = \
 	VPoxCAPI.cpp
 VPoxCAPI_SOURCES.win = \
	VPoxCAPI.rc
 VPoxCAPI_INCS = \
 	$(CAPIHeaders_0_OUTDIR)
 VPoxCAPI_INTERMEDIATES = \
 	$(CAPIHeaders_0_OUTDIR)/VPoxCAPI.h

 #
 # The C glue library.
 #
 LIBRARIES += VPoxCAPIGlue
 VPoxCAPIGlue_TEMPLATE = VPOXMAINEXE
 VPoxCAPIGlue_DEFS = IN_VPOXCAPI
 VPoxCAPIGlue_SOURCES = \
 	VPoxCAPIGlue.c
 ifdef VPOX_WITH_XPCOM
  VPoxCAPIGlue_SOURCES += \
 	$(VPOX_PATH_SDK)/bindings/xpcom/lib/VirtualPox_i.c
 else
  VPoxCAPIGlue_SOURCES += \
 	$(VPOX_PATH_SDK)/bindings/mscom/lib/VirtualPox_i.c
 endif
 VPoxCAPIGlue_INCS = \
 	$(VPOX_PATH_SDK)/bindings/c/include \
 	$(VPOX_PATH_SDK)/bindings/c/glue
 VPoxCAPIGlue_INTERMEDIATES = \
 	$(VPOX_PATH_SDK)/bindings/c/glue/VPoxCAPIGlue.h \
 	$(VPOX_PATH_SDK)/bindings/c/include/VPoxCAPI_v$(VPOX_API_VERSION).h

 if defined(VPOX_WITH_TESTCASES) && "$(KBUILD_TARGET)" != "darwin"
  #
  # The testcase (also in samples).
  # C testcase using the dynamic glue.
  #
  PROGRAMS += tstCAPIGlue
  tstCAPIGlue_TEMPLATE = VPOXR3TSTEXE
  tstCAPIGlue_INCS = \
  	$(VPOX_PATH_SDK)/bindings/c/include \
  	$(VPOX_PATH_SDK)/bindings/c/glue
  ifdef VPOX_WITH_XPCOM
   tstCAPIGlue_INCS += \
   	$(VPOX_PATH_SDK)/bindings/xpcom/include
  else
   tstCAPIGlue_INCS += \
   	$(VPOX_PATH_SDK)/bindings/mscom/include
  endif
  tstCAPIGlue_INTERMEDIATES = \
  	$(VPOX_PATH_SDK)/bindings/c/glue/VPoxCAPIGlue.h \
  	$(VPOX_PATH_SDK)/bindings/c/include/VPoxCAPI_v$(VPOX_API_VERSION).h \
       $(if-expr !defined(VPOX_WITH_XPCOM),$(VPOX_PATH_SDK)/bindings/mscom/include/VirtualPox.h,)
  tstCAPIGlue_SOURCES = \
  	tstCAPIGlue.c
  tstCAPIGlue_LIBS = \
  	$(VPoxCAPIGlue_1_TARGET)
 endif

endif # ! VPOX_ONLY_SDK

# generate rules.
include $(FILE_KBUILD_SUB_FOOTER)

